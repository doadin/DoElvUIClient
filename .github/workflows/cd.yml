name: Package

on:
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      ref:
        description: "Enter a tag or commit to package"
        default: ""

permissions:
  contents: write

jobs:
  windows_package:
    runs-on: windows-2019
    if: (github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'package'))
    strategy:
      matrix:
        arch: [x64]
        python: ["3.10"]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Checkout DoElvUIClient source to subdir to enable packaging any tag/commit
      - name: Checkout DoElvUIClient source
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python}}
          architecture: ${{ matrix.arch }}
          cache: pip

      - name: Prepare pip
        run: python -m pip install wheel

      - name: Install Python dependencies
        run: >
          python -m pip install
          pyinstaller==4.10
          markdown
          requests
          darkdetect
          sv-ttk
          tkhtmlview

      - name: Find Version
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          $DoElvUIClientVersion = 'build_version = "${{  github.ref_name }}"'
          $DoElvUIClientVersion > ${{ github.workspace }}\VERSION.tmp
          Get-Content -Path ${{ github.workspace }}\VERSION.tmp | echo
          $CDDoElvUIClientVersion = '"${{  github.ref_name }}"'
          $CDDoElvUIClientVersion > '${{ github.workspace }}\CDVERSION.tmp'
          Get-Content -Path ${{ github.workspace }}\CDVERSION.tmp | echo
          python ${{ github.workspace }}\CD.py

      - name: Freeze DoElvUIClient
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          pyinstaller --log-level INFO --onefile --collect-data sv_ttk --noconsole --name DoElvUIClient --clean DoElvUIClient.py --distpath freeze

      - name: Make DoElvUIClient Installer
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          makensis /Darch=${{ matrix.arch }} DoElvUIClient-win-installer.nsi

      - uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: DoElvUIClient-py${{ matrix.python }}-${{ matrix.arch }}
          path: |
              ${{ github.workspace }}/*.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{  github.ref_name }}
          tag_name: ${{  github.ref_name }}
          files: "D:/a/DoElvUIClient/DoElvUIClient/*.exe"